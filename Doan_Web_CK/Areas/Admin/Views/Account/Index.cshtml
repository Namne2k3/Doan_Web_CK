@model IEnumerable<Doan_Web_CK.Models.ApplicationUser>

@{
    ViewData["Title"] = "Manage Users";
}
<h1>Manage Users</h1>
<div>
    <input placeholder="Search account name or email..." class="form-control" type="text"
        oninput="handleSearch(event)" />
</div>
<table class="table text-white mt-2">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateCreated)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tbody">
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td>
                    <a class="btn btn-outline-light" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-outline-light" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-outline-light" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    function createUserRow(item) {
        // Create <tr> element
        var row = document.createElement("tr");

        // Create <td> elements for each property of the user
        var userNameCell = document.createElement("td");
        userNameCell.textContent = item.userName;
        row.appendChild(userNameCell);

        var emailCell = document.createElement("td");
        emailCell.textContent = item.email;
        row.appendChild(emailCell);

        var phoneNumberCell = document.createElement("td");
        phoneNumberCell.textContent = item.phoneNumber;
        row.appendChild(phoneNumberCell);

        var dateCreatedCell = document.createElement("td");
        dateCreatedCell.textContent = item.dateCreated;
        row.appendChild(dateCreatedCell);

        // Create buttons for Edit, Details, and Delete actions
        var editButton = document.createElement("a");
        editButton.setAttribute("class", "btn btn-outline-light");
        editButton.setAttribute("href", "/Admin/Account/Edit/" + item.id);
        editButton.textContent = "Edit";

        var detailsButton = document.createElement("a");
        detailsButton.setAttribute("class", "btn btn-outline-light");
        detailsButton.setAttribute("href", "/Admin/Account/Details/" + item.id);
        detailsButton.textContent = "Details";

        var deleteButton = document.createElement("a");
        deleteButton.setAttribute("class", "btn btn-outline-light");
        deleteButton.setAttribute("href", "/Admin/Account/Delete/" + item.id);
        deleteButton.textContent = "Delete";

        var actionCell = document.createElement("td");
        actionCell.appendChild(editButton);
        actionCell.appendChild(detailsButton);
        actionCell.appendChild(deleteButton);
        row.appendChild(actionCell);

        // Return the created <tr> element
        return row;
    }

    var tbody = document.getElementById('tbody');
    function handleSearch(event) {
        let search = event.target.value
        fetch(`/Admin/Account/GetAllAccountAsync?search=${search}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log(data)
                if (tbody) {
                    tbody.innerHTML = '';
                    data.accounts.forEach(item => {
                        tbody.appendChild(createUserRow(item));
                    });
                }

            })
            .catch(error => {
                console.log('There was a problem with the fetch operation:', error);
            });
    }
</script>