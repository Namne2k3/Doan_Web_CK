@model IEnumerable<Doan_Web_CK.Models.ApplicationUser>

@{
    ViewData["Title"] = "Manage Users";
}
<h1>Manage Users</h1>
<div>
    <input placeholder="Search account name or email..." class="form-control" type="text"
        oninput="handleSearch(event)" />
</div>
<div class="admin_account_section" id="tbody">
    @foreach ( var item in Model )
    {
        <div class="admin_account_item">
            <div class="admin_account_header_container">
                <div class="admin_account_item_img_container">
                    <img src="@item.ImageUrl" alt="image account" />
                </div>
                <div class="admin_account_item_username_container">
                    <p>@@@item.UserName</p>
                </div>
            </div>
            <div class="admin_account_action">
                <a asp-action="Details" asp-route-id="@item.Id" asp-controller="Account" class="admin_account_action_item btn btn-outline-light">Details</a>
                <button data-bs-target="#exampleModal_@item.Id" data-bs-toggle="modal" class="admin_account_action_item btn btn-outline-light">Delete</button>
            </div>
        </div>
        <div class="modal fade text-black" id="exampleModal_@item.Id" tabindex="-1" aria-labelledby="exampleModalLabel"
             aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Confirm Deleting</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure to delete this user <span class="badge text-bg-danger">@item.UserName</span>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <form asp-controller="Account" asp-action="Delete" asp-route-id="@item.Id"
                              method="post">
                            <button type="submit" class="btn btn-danger">Confirm Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script>
    function createUserRow(item) {
        // Create <tr> element
        var row = document.createElement("tr");

        // Create <td> elements for each property of the user
        var userNameCell = document.createElement("td");
        userNameCell.textContent = item.userName;
        row.appendChild(userNameCell);

        var emailCell = document.createElement("td");
        emailCell.textContent = item.email;
        row.appendChild(emailCell);

        var phoneNumberCell = document.createElement("td");
        phoneNumberCell.textContent = item.phoneNumber;
        row.appendChild(phoneNumberCell);

        var dateCreatedCell = document.createElement("td");
        dateCreatedCell.textContent = item.dateCreated;
        row.appendChild(dateCreatedCell);

        // Create buttons for Edit, Details, and Delete actions
        var editButton = document.createElement("a");
        editButton.setAttribute("class", "btn btn-outline-light");
        editButton.setAttribute("href", "/Admin/Account/Edit/" + item.id);
        editButton.textContent = "Edit";

        var detailsButton = document.createElement("a");
        detailsButton.setAttribute("class", "btn btn-outline-light");
        detailsButton.setAttribute("href", "/Admin/Account/Details/" + item.id);
        detailsButton.textContent = "Details";

        var deleteButton = document.createElement("a");
        deleteButton.setAttribute("class", "btn btn-outline-light");
        deleteButton.setAttribute("href", "/Admin/Account/Delete/" + item.id);
        deleteButton.textContent = "Delete";

        var actionCell = document.createElement("td");
        actionCell.appendChild(editButton);
        actionCell.appendChild(detailsButton);
        actionCell.appendChild(deleteButton);
        row.appendChild(actionCell);

        // Return the created <tr> element
        return row;
    }

    var tbody = document.getElementById('tbody');
    function handleSearch(event) {
        let search = event.target.value
        fetch(`/Admin/Account/GetAllAccountAsync?search=${search}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log(data)
                if (tbody) {
                    tbody.innerHTML = '';
                    data.accounts.forEach(item => {
                        tbody.appendChild(createUserRow(item));
                    });
                }

            })
            .catch(error => {
                console.log('There was a problem with the fetch operation:', error);
            });
    }
</script>